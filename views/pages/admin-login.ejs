<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
    <%- include('../partials/head', {header: {title: "Login", description: ""}}); %>
</head>

<body>
    <header>
        <%- include('../partials/navigation', {page: "", user: pd.user}); %>
        <script src="https://www.google.com/recaptcha/api.js?onload=onCaptchaLoaded&render=explicit" async defer></script>
    </header>

    <main>
        <div class="container p-3 mt-5">
            <div class="row g-5">
                <div class="col-4 mx-auto" id="formLogin">
                    <div class="row g-3">
                        <div class="col-sm-12">
                            <label for="txtUsername" class="form-label">Username</label>
                            <input type="text" class="form-control" id="txtUsername">
                        </div>

                        <div class="col-sm-12">
                            <label for="txtPassword" class="form-label">Password</label>
                            <input type="password" class="form-control" id="txtPassword">
                        </div>

                        <div class="col-12">
                            <div id="captchaContainer" class="g-recaptcha"></div>
                        </div>
                    </div>

                    <hr class="my-4">

                    <button class="w-100 btn btn-primary btn-lg" id="btnSubmit">Login</button>
                </div>
            </div>
        </div>
    </main>

    <footer>
        <%- include('../partials/footer-admin'); %>
    </footer>
    
    <script>
        const txtPassword = $("#txtPassword");
        const txtUsername = $("#txtUsername");
        const btnSubmit = $("#btnSubmit");
        const formLogin = $("#formLogin");
        const captchaContainer = $("#captchaContainer");

        let invalidFieldsExist = false;
        let captcha = null;

        btnSubmit.on("click", async ()=>{
            const username = txtUsername.val();
            const password = txtPassword.val();

            const formKeys = {
                username: txtUsername,
                password: txtPassword,
                captcha: captchaContainer
            };

            validator.removeValidationMessages(formLogin);

            btnSubmit.html(`<i class="fas fa-cog fa-spin"></i> Loading...`).prop("disabled", "disabled");

            const res = await api.login({username, password, captcha, setCookie: true});
            const bod = await res.json();

            btnSubmit.html(`Login`).prop("disabled", "");

            const onSuccess = ()=>{
                window.location = "/admin";
            };

            const onError = (status)=>{
                if(status !== 422) alert(bod.message);
            };

            validator.handleFormSubmit(res, bod, formLogin, formKeys, onSuccess, onError);
        });

        function onCaptchaLoaded(){
            grecaptcha.render('captchaContainer', {
                sitekey: '<%=pd.googleSiteKey%>',
                callback: (response)=>{
                    captcha = response;
                },
                theme: 'light'
            });
        }
    </script>
</body>

</html>